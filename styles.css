/* TODO */
/* Set row/pixel sizing dynamically -- always want to evenly fill the .sketch-container regardless of the number of pixels present or the size of the container 
--- probably should use CSS grid for that. Means I'll need to adjust how I'm making the grid but that's okay
*/

/* TODO make color scheme less fugly */
html {
  box-sizing: border-box;
  background-color: rgb(82, 82, 82);
  margin: 0;
  padding: 0;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* font-family: Kanit; */
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}

.header {
  background-color: red;
  padding-bottom: 3rem;
  width: 1000px;
  height: 50px;
}

.heading {
  margin: 0;
  text-align: center;
  font-size: 60px;
  font-stretch: extra-expanded;
}

.main {
  display: block;
  width: 800px;
  background-color: red;
  border: 100px solid red;
  border-bottom: 50px solid red;
  border-top: 0;
}

.sketch-container {
  display: block;
  margin: auto;
  margin-bottom: 2rem;
  background-color: white;
}

/* FIXME min-height needs to be set dynamically */
.row {
  display: flex;
  flex: auto;
  min-height: 31.25px;
}

.pixel {
  /* border: 0.25px solid rgb(173, 173, 173); */
  flex: auto;
  text-align: center;
}

/* OPTIONS */
.options {
  display: flex;
  justify-content: space-between;
  margin-top: 50px;
}

.option-btn {
  min-height: 75px;
  border-radius: 3px;
  border: none;
  background-color: white;
  font-size: 16px;
}

.option-btn:hover {
  background-color: darkmagenta;
}

.option-btn.active {
  background-color: pink;
}

.option-btn:active {
  background-color: darkorchid;
}

.slider-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
}

.slider-label {
  color: black;
}

/* TEXT GOODIES */
.rise {
  text-shadow: -0.01em -0.01em 0.01em #000;
  animation: rise 2s ease-in-out 0.5s forwards;
}

@keyframes rise {
  to {
    text-shadow: 0em 0.01em lightgray, 0em 0.02em lightgray,
      0em 0.02em 0.03em lightgray, -0.01em 0.01em #333, -0.02em 0.02em #333,
      -0.03em 0.03em #333, -0.04em 0.04em #333, -0.01em -0.01em 0.03em #000,
      -0.02em -0.02em 0.03em #000, -0.03em -0.03em 0.03em #000;
    transform: translateY(-0.025em) translateX(0.04em);
  }
}
